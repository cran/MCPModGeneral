% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MCPModSurv.R
\name{MCPModSurv}
\alias{MCPModSurv}
\title{MCPModSurv - Multiple Comparison and Modeling for Coxph and Parametric
Survival Models}
\usage{
MCPModSurv(
  model = c("coxph", "parametric"),
  dist = NULL,
  returnS = FALSE,
  dose,
  resp,
  status,
  data = NULL,
  models,
  placAdj = FALSE,
  selModel = c("AIC", "maxT", "aveAIC"),
  alpha = 0.025,
  df = NULL,
  critV = NULL,
  doseType = c("TD", "ED"),
  Delta,
  p,
  pVal = TRUE,
  alternative = c("one.sided", "two.sided"),
  na.action = na.fail,
  mvtcontrol = mvtnorm.control(),
  bnds,
  control = NULL,
  ...
)
}
\arguments{
\item{model}{A character string containing the survival regression model.}

\item{dist}{A character string for the distribution, in the case when
\code{model} is "parametric". Must be one of "\code{weibull}",
"\code{exponential}", "\code{gaussian}", "\code{logistic}",
"\code{lognormal}", or "\code{loglogistic}".}

\item{returnS}{Logical determining whether muHat and SHat should be returned,
in additional to the MCPMod output.}

\item{dose, resp, status}{Either character strings specifying the names of the
respective columns in the \code{data} data frame, or numeric vectors of
equal length containing their respective values. \code{status} refers to
whether an observation was censored or not. If no observations were
censored, \code{status} should be a vector of 1s.}

\item{data}{Data frame with names specified in `dose`, `resp`, and optionally
`w`. If data is not specified, it is assumed that `dose` and `resp` are
numerical vectors}

\item{models}{
    An object of class \samp{"Mods"}, see \code{\link[DoseFinding]{Mods}} for
    details
  }

\item{placAdj}{Logical specifying whether the provided by `resp` are to be
treated as placebo-adjusted estimates.}

\item{selModel}{
  Optional character vector specifying the model selection criterion for
  dose estimation.  Possible values are 
  \itemize{
    \item \code{AIC}: Selects model with smallest AIC (this is the default)
    \item \code{maxT}: Selects the model corresponding to the largest t-statistic.
    \item \code{aveAIC}: Uses a weighted average of the models corresponding to the
    significant contrasts.  The model weights are chosen by the formula:
    \eqn{w_i = \exp(-0.5AIC_i)/\sum_i(\exp(-0.5AIC_i))}{w_i = exp(-0.5AIC_i)/sum(exp(-0.5AIC_i))}
    See Buckland et al. (1997) for details.
  }
  For \samp{type = "general"} the "gAIC" is used.

}

\item{alpha}{
    Significance level for the multiple contrast test
}

\item{df}{An optional numeric value specifying the degrees of freedom.
Infinite degrees of freedom (`df=Inf`, the default), correspond to the
multivariate normal distribution.}

\item{critV}{
  Supply a pre-calculated critical value. If this argument is NULL, no
  critical value will be calculated and the test decision is based on
  the p-values. If \samp{critV = TRUE} the critical value will be calculated. 
}

\item{doseType}{
    \samp{doseType} determines the dose to estimate, ED or TD (see also
    \code{\link[DoseFinding]{Mods}}), and \samp{Delta} and \samp{p} need to be
    specified depending on whether TD or ED is to be estimated.
    See \code{\link[DoseFinding]{TD}} and \code{\link[DoseFinding]{ED}} for details.
  }

\item{Delta}{
    \samp{doseType} determines the dose to estimate, ED or TD (see also
    \code{\link[DoseFinding]{Mods}}), and \samp{Delta} and \samp{p} need to be
    specified depending on whether TD or ED is to be estimated.
    See \code{\link[DoseFinding]{TD}} and \code{\link[DoseFinding]{ED}} for details.
  }

\item{p}{
    \samp{doseType} determines the dose to estimate, ED or TD (see also
    \code{\link[DoseFinding]{Mods}}), and \samp{Delta} and \samp{p} need to be
    specified depending on whether TD or ED is to be estimated.
    See \code{\link[DoseFinding]{TD}} and \code{\link[DoseFinding]{ED}} for details.
  }

\item{pVal}{
    Logical determining, whether p-values should be calculated.
}

\item{alternative}{
  Character determining the alternative for the multiple contrast
  trend test. 
}

\item{na.action}{
  A function which indicates what should happen when
  the data contain NAs.
}

\item{mvtcontrol}{
  A list specifying additional control parameters for the \samp{qmvt}
  and \samp{pmvt} calls in the code, see also \code{\link[DoseFinding]{mvtnorm.control}}
  for details.
}

\item{bnds}{
  Bounds for non-linear parameters. This needs to be a list with list
  entries corresponding to the selected bounds. The names of the list
  entries need to correspond to the model names. The
  \code{\link[DoseFinding]{defBnds}} function provides the default selection.
}

\item{control}{
  Control list for the optimization.\cr
  A list with entries: "nlminbcontrol", "optimizetol" and "gridSize".
  
  The entry nlminbcontrol needs to be a list and is passed directly to
  control argument in the nlminb function, that is used internally for
  models with 2 nonlinear parameters (e.g. sigmoid Emax or beta model).
    
  The entry optimizetol is passed directly to the tol argument of the
  optimize function, which is used for models with 1 nonlinear
  parameters (e.g. Emax or exponential model).

  The entry gridSize needs to be a list with entries dim1 and dim2
  giving the size of the grid for the gridsearch in 1d or 2d models.
}

\item{...}{Additional arguments to be passed to \code{coxph} or
\code{survreg}. This is especially useful when a fitting error is returned.}
}
\value{
An object of class MCPMod if returnS = FALSE. Otherwise, a list
  containing an object of class MCPMod, the numeric vector \eqn{\mu}, and the
  numeric matrix \eqn{S}.
}
\description{
This function allows the user to implement the MCPMod function on a Cox
proportional hazards regression model and a parametric survival model. The
function works very similarly to
\code{\link[MCPModGeneral:MCPModGen]{MCPModGen}}, but is unique enough in
terms of the data and the parameters to warrant its own function.
}
\details{
`MCPModSurv` works by making calls to `coxph`, `survreg`, and `Surv` from the
`survival` package. After retrieving coefficient estimates and the estimated
covariance matrix, values are passed into the `MCPMod` function from the
`DoseFinding` package.
}
